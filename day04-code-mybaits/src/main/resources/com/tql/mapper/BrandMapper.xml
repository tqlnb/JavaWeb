<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace : 名称空间
-->
<mapper namespace="com.tql.mapper.BrandMapper">

    <!--
        数据库表的字段名称和实体类的字段名称不一样则不能自动封装
            *起别名
                * 缺点: 每次查询定义别名 不方便
                    *sql片段
                        *缺点: 不灵活
            *ResultMap

    -->

    <resultMap id="brandResultMap" type="brand">
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
        select
            *
        from tb_brand;
    </select>

    <!--
        如果要使用<号
        1.使用转义
        2.使用cdata区: CD提示
    -->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand
        where id
         <![CDATA[
            <=
         ]]>
         #{id};
    </select>
<!--    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
        and company_name like #{companyName}
        and brand_name like #{brandName};
    </select>-->

    <!--
        动态条件查询
    -->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status != null">
                and status = #{status}
            </if>

            <if test="companyName != null and companyName != ''">
                and company_name like #{companyName}
            </if>

            <if test="brandName != null and brandName != ''">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        where
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="brandName != null">
                    brand_name like #{brandName}
                </when>
                <when test="companyName != null">
                    company_name like #{companyName}
                </when>
                <otherwise>
                    1 = -1
                </otherwise>
            </choose>;
    </select>

    <insert id="add">
        insert into tb_brand ( brand_name, company_name, ordered, description, status)
        values ( #{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};
    </update>

    <delete id="deleteById">
        delete
        from tb_brand
        where id = #{id};
    </delete>

    <delete id="deleteByIds">
        delete
        from tb_brand
        where id
        in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>;
    </delete>


    <!--  &lt;!&ndash;
          sql片段
      &ndash;&gt;
      <sql id="brand_column">
          id, brand_name as brandName, company_name as companyName, ordered, description, status
      </sql>

      <select id="selectAll" resultType="brand">
          select
          <include refid="brand_column"/>
          from tb_brand;
      </select>-->

</mapper>